{"version":3,"file":"product.spec.js","sourceRoot":"","sources":["../../src/test/product.spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8GG","sourcesContent":["/* import mongoose from \"mongoose\";\nimport request from \"supertest\";\nimport { expect } from \"chai\";\nimport { app, base } from \"../app\";\nimport { Product } from \"../interfaces\";\nimport url from \"url\";\n\nconst ProductModel = base<Product>(\"product\");\n\ndescribe(\"/api\", () => {\n  //So Id add authentication and try to signin before all the request and send the\n  //token and be authenticated\n  beforeEach(async () => {});\n  describe(\"GET /products\", () => {\n    it(\"should return all products\", async function () {\n      this.timeout(100000);\n      //Its sending the data but its coming late because I think the data are so much that\n      //it is taking a very long time.\n      const res = await request(app).get(\"/api/products\");\n      expect(res.status).to.equal(200);\n      expect(res.body.data.length).not.equal(0);\n    });\n  });\n  describe(\"GET /products/search?\", () => {\n    it(\"should return all products that match both the search parameters\", async function () {\n      this.timeout(100000);\n      const path = url.format({\n        pathname: `/api/products/search`,\n        query: {\n          description: \"PTP SER EMC CABLE GLAND (GROUNDING) Qty. 10\",\n          pathnumber: \"WB1811B\",\n          func: \"and\",\n        },\n      });\n      const res = await request(app).get(path);\n      expect(res.status).to.equal(200);\n      expect(res.body.data.length).not.equal(0);\n    });\n    it(\"should return all products that match either of the search parameters\", async function () {\n      this.timeout(100000);\n      const path = url.format({\n        pathname: `/api/products/search`,\n        query: {\n          description: \"Mounting Bracket (integrated)\",\n          pathnumber: \"WB1811B\",\n          func: \"or\",\n        },\n      });\n      const res = await request(app).get(path);\n      expect(res.status).to.equal(200);\n      expect(res.body.data.length).not.equal(0);\n    });\n    it(\"should return all products that match the search parameter Path number\", async function () {\n      this.timeout(100000);\n      const path = url.format({\n        pathname: `/api/products/search`,\n        query: {\n          pathnumber: \"N000065L033A\",\n        },\n      });\n      const res = await request(app).get(path);\n      expect(res.status).to.equal(200);\n      expect(res.body.data.length).not.equal(0);\n    });\n    it(\"should return all products that match the search parameter description\", async function () {\n      this.timeout(100000);\n      const path = url.format({\n        pathname: `/api/products/search`,\n        query: {\n          description:\n            \"RFU-A Branching Drawer 1+1 SD Tx-L Sampler+Coupler, 6L-252A-3W6\",\n        },\n      });\n      const res = await request(app).get(path);\n      expect(res.status).to.equal(200);\n      expect(res.body.data.length).not.equal(0);\n    });\n    it(\"should return 404\", async function () {\n      this.timeout(100000);\n      const path = url.format({\n        pathname: `/api/products/search`,\n        query: {\n          name: \"\",\n        },\n      });\n      const res = await request(app).get(path);\n      expect(res.status).to.equal(404);\n      expect(res.body.data.message).equal(\"No Product\");\n    });\n  });\n  describe(\"GET /product\", () => {\n    it(\"should return products by id\", async function () {\n      const id = \"recGG8Eb9SOrHv7sH\";\n      const res = await request(app).get(`/api/product/${id}`);\n      const { data } = res.body;\n      expect(res.status).to.equal(200);\n      expect(data).to.have.property(\"PartNumber\", \"C060082R118A\");\n      expect(data).to.have.property(\n        \"Description\",\n        \"PTP 820 RFU-C,6HGHz,TR340B,Ch5W8,Lo,6581-6739MHz\"\n      );\n    });\n    it(\"should say not found\", async function () {\n      const id = \"recGG8Eb9SOrHv7sHsss\";\n      const res = await request(app).get(`/api/product/${id}`);\n      expect(res.status).to.equal(404);\n    });\n  });\n});\n// ◢ ◤\n */\n"]}